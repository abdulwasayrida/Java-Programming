ReadME: 

Exercise 1: In the following exercise, I created a separate driver for both Part 1 and Part 2. For Part 1, I created a parent class called SavingsAccount which had methods for calculating Monthly Interest, modifying the interest rate, withdrawing and depositing money (mentioned in the lecture to place these methods in the parent class). I also include the appropriate getters/setters and other constructors. In the Driver for Exercise 1, I created to users Saver1 and Saver2 and set the appropriate interest rates for them. I then got their new balances. For this part, most of the guidelines for the driver were already explicitly stated in the Assignment information. 

As for Part 2, I created another Driver2 and a child class called SpecialSavings. I used the super keyword to invoke the methods from the parent class. The only new method I added in the SpecialSavings class was an overridden method for calculating the Monthly Interest. If the balance of the user was over 10k, then a new interest rate (10%) would be charged. If the balance was less, then the interest rate would fall back to 4%. The parent method for setting the Monthly Interest and Depositing money would also be called in order to change the values stored. In Driver2, I created two new savers again and deposited and withdrew a sum of money. For testing purposes, I intentionally had Saver1’s end balance to be less than 10k while Saver2’s was more than 10k and had the appropriate interest rates applies. 

Exercise 2: For this, I created a parent class called Ship along with 2 child classes CargoShip and CruiseShip. The Ship class and basic info such as floating, capacity, length, width, name, height, origin, departureDate, arrivalDate, departingPort, arrivalPort, owner. The CruiseShip child class inherited these properties along with other properties such as ticketPrice, numberOfRooms, buffetMenu, services [], cruiseType. Another child class of Ship’s—CargoShip—inherited Ship’s properties as well as other properties such as cargoType, loadingMethod, numberOfCranes, contraband, cargoValue. In essence, the Ship class is the PARENT while the CargoShip and CruiseShip class are the CHILDREN. I also created a Driver class in which I populated information in all 3 types of ships, all of which are part of the main Ship array of size 3. I then called the print method for each of the 3 ships and listed the outputs.  


Comments:
For Assignment 4 Exercise 1 Part 1, the Driver class in the first package must be run, and for Assignment 4 Exercise 1 Part 2 the Driver2 class in the package Exercise_1_Part_2 must be run. For Assignment 4 Exercise 2, the driver in the package Exercise_2 must be run.  
 
